---
import Layout from './_layout.astro';
import Products from './_products.astro';

const products = [
  {
    href: 'https://pokemon-awesome.vercel.app/',
    name: 'Pok√©mon Awesome',
    desc: 'Rank #2 on Google when you search for "compare pokemons".',
    dateInfo: 'Jul 2024',
    preview: { src: 'pokemon-awesome.webp', width: 600, height: 379 },
    previewPlaceholder: { src: 'pokemon-awesome-placeholder.webp', width: 500, height: 316 },
  },
  {
    href: 'statistiku',
    name: 'Statistiku',
    desc: 'An innovative web-based statistics tool, showcasing my proficiency in math, statistics, & programming. Yes, it really is from more than 5 years ago.',
    dateInfo: 'Mar 2019',
    preview: { src: 'statistiku.webp', width: 600, height: 379 },
    previewPlaceholder: { src: 'statistiku-placeholder.webp', width: 500, height: 316 },
  },
  {
    href: 'https://www.youtube.com/@afifu',
    name: 'YouTube.com/@afifu',
    desc: 'Well-animated educational contents on software engineering.',
    dateInfo: '2021-2023',
    preview: { src: 'afif-youtube-channel.webp', width: 800, height: 516 },
  },
  {
    href: 'https://isosehat.netlify.app/?source=afiiif.github.io',
    name: 'Healthcare ü§ù Isochrone',
    desc: 'An interactive GIS web app that integrates OpenStreetMap, OpenRoute Service, and WorldPop Hub data to analyze healthcare facilities accessibility using isochrones.',
    dateInfo: 'Oct 2024',
    preview: {
      src: 'https://isosehat.netlify.app/img/preview.webp',
      width: 870,
      height: 540,
    },
  },
  {
    href: 'https://marketplace.visualstudio.com/items?itemName=afifu.vscode-js-ts-react-nextjs-snippets',
    name: 'JS/TS React/Next.js Snippets',
    desc: 'Productivity VSCode extension (6K+ installs).',
    dateInfo: 'May 2023',
    preview: { src: 'vscode-js-ts-snippets.webp', width: 680, height: 306 },
  },
  {
    href: 'kode-wilayah-dan-pos',
    name: 'KodeWilayah',
    desc: 'The simplest website to search Indonesian region code & postal code.',
    dateInfo: 'Jun 2024',
    preview: { src: 'kode-wilayah-dan-pos.webp', width: 600, height: 379 },
  },
  {
    href: 'https://www.youtube.com/watch?v=q7Lbn_JtLdw',
    name: 'BagiTugas (BPS)',
    desc: "Crafted an app from scratch using Bootstrap, PHP, and SQLite, which significantly improved the efficiency and speed of my coworker's workflow.",
    dateInfo: 'Jul 2020',
    preview: { src: 'bagitugas.png', width: 850, height: 403 },
  },
  {
    href: 'spk',
    name: 'National Standard Industrial Classification',
    desc: 'Industrial classification code & definition used by BPS (national statistics office).\nNo fancy tech-stacks, just a solution to a REAL problem.',
    dateInfo: 'Jun 2020',
    preview: { src: 'spk.webp', width: 600, height: 379 },
  },
];
---

<Layout
  title="Muhammad Afifudin"
  description="Muhammad Afifudin, a software engineer, designer, content creator, ex-statistician."
>
  <Fragment slot="head">
    <link
      rel="preload"
      as="image"
      type="image/webp"
      href={`/img/${products[0].previewPlaceholder!.src}`}
    />
    <link
      rel="preload"
      as="image"
      type="image/webp"
      href={`/img/${products[1].previewPlaceholder!.src}`}
    />
  </Fragment>

  <h1 class="font-bold text-2xl sm:text-3xl">Muhammad Afifudin üáÆüá©</h1>
  <p class="pt-0.5 text-neutral-400 text-lg sm:text-2xl font-extralight">
    Software engineer & designer <span class="inline-block">in 1 person.</span>
  </p>

  <p class="pt-8">
    I love creating products that bring real value to people, and sometimes indulge in unique
    projects just for fun. I bring together technical precision and creative vision. FE, BE,
    web/mobile, I deliver clean, high-performance solutions that look great and work even better.
  </p>
  <p class="pt-4">
    I'm a professional remote worker, and currently not interested in on-site work, unless ...
    <i class="bg-neutral-800 px-2 py-0.5 rounded-md text-neutral-400">*some text missing*</i>
  </p>

  <div
    class="mt-20 text-2xl font-extralight flex gap-3.5 items-center text-neutral-400 tracking-wide"
  >
    <h2>PROJECTS</h2>
    <div class="h-px bg-neutral-500 flex-1"></div>
  </div>
  <Products products={products} />
  <section class="pt-10 pb-1">
    <div class="sm:flex sm:items-center sm:justify-between">
      <h3 class="inline font-semibold text-lg mr-1">Insaniquarium Fun Project</h3>
      <div class="text-sm bg-neutral-800 text-white inline-block rounded-md px-2 py-0.5">
        Sep 2024
      </div>
    </div>
    <p class="text-sm pt-1.5 pb-4 text-neutral-400 font-light">
      Take a moment to relax, unwind, and watch the fish.
    </p>
    <div
      id="insaniquarium-tank"
      class="rounded-lg overflow-hidden relative border border-neutral-700 aspect-video"
    >
      <p
        class="text-xs text-neutral-400 absolute right-2.5 bottom-2.5 pointer-events-none animate-pulse [animation-duration:7s]"
      >
        Click on the fish to duplicate it.
      </p>
    </div>
  </section>

  <div
    class="mt-24 text-2xl font-extralight flex gap-3.5 items-center text-neutral-400 tracking-wide"
  >
    <h2>SKILLS</h2>
    <div class="h-px bg-neutral-500 flex-1"></div>
  </div>
  <ul
    class:list={[
      'pt-8 flex flex-wrap gap-2 items-center',
      '[&_li:not(:last-child)]:bg-neutral-800 [&_li:not(:last-child)]:px-2 [&_li:not(:last-child)]:py-0.5 [&_li:not(:last-child)]:rounded-md',
    ]}
  >
    <li>JavaScript</li>
    <li>TypeScript</li>
    <li>Node.js</li>
    <li>Next JS</li>
    <li>Astro JS</li>
    <li>Vanilla JS</li>
    <li>jQuery</li>
    <li>CSS</li>
    <li>Animation</li>
    <li>Tailwind</li>
    <li>Ant Design</li>
    <li>TanStack-Query</li>
    <li>SQL</li>
    <li>Python</li>
    <li>Data Visualization</li>
    <li>GIS</li>
    <li class="text-neutral-400">and many more...</li>
  </ul>

  <div
    class="mt-24 text-2xl font-extralight flex gap-3.5 items-center text-neutral-400 tracking-wide"
  >
    <h2>LINKS</h2>
    <div class="h-px bg-neutral-500 flex-1"></div>
  </div>
  <ul
    class:list={[
      'pt-7',
      '[&_a]:inline-block [&_a]:py-1',
      '[&_a:hover]:underline [&_a:hover]:decoration-dashed [&_a:hover]:decoration-blue-400',
      '[&_span]:text-neutral-400 [&_span]:ml-[3px]',
    ]}
  >
    <li>
      <a href="mailto:afiiifudin@gmail.com">afiiifudin@gmail.com &nbsp;üì¨</a>
    </li>
    <li>
      <a href="https://www.linkedin.com/in/m-afifudin/">linkedin.com<span>/m-afifudin</span></a>
    </li>
    <li>
      <a href="https://github.com/afiiif">github.com<span>/afiiif</span></a>
    </li>
    <li>
      <a href="https://x.com/digimushrm">x.com<span>/digimushrm</span></a>
    </li>
    <li>
      <a href="https://dev.to/afiiif">dev.to<span>/afiiif</span></a>
    </li>
  </ul>

  <div class="pb-12"></div>
</Layout>

<style is:global>
  a {
    @apply decoration-dashed;
  }

  .appear {
    opacity: 0;
    animation: appear 0.5s linear 0.7s forwards;
  }
  @keyframes appear {
    from {
      opacity: 0;
    }
    to {
      opacity: 100%;
    }
  }

  #insaniquarium-tank {
    @apply bg-gradient-to-t from-neutral-950 to-neutral-800;
    > div {
      @apply absolute transition-[top,left] pointer-events-none;
      transition-duration: var(--move-duration, 3s);
    }
    i {
      @apply block cursor-pointer scale-75 sm:scale-90 rounded-lg border-neutral-500 border-dashed pointer-events-auto;
    }
  }
  @media (pointer: fine) {
    #insaniquarium-tank i {
      @apply hover:opacity-75;
    }
  }

  .fish-swim {
    width: 80px;
    height: 80px;
    background-image: url('/insaniquarium/swim.png');
    background-position-x: 0px;
    background-position-y: var(--pos-y, -80px);
    animation: swim 1.6s steps(9) infinite;
  }
  @keyframes swim {
    from {
      background-position-x: 0px;
    }
    to {
      background-position-x: -720px;
    }
  }

  .fish-turn {
    width: 80px;
    height: 80px;
    background-image: url('/insaniquarium/turn.png');
    background-position-x: 0px;
    background-position-y: var(--pos-y, -80px);
    animation: turn 1.2s steps(9) forwards;
  }
  @keyframes turn {
    from {
      background-position-x: 0px;
    }
    to {
      background-position-x: -720px;
    }
  }
</style>

<script>
  const assetsUrl =
    process.env.NODE_ENV === 'development'
      ? 'img'
      : 'https://afif-assets.pages.dev/afiiif_github_io/v1';

  setTimeout(() => {
    fetch(`${assetsUrl}/pokemon-awesome.webp`).then((res) => {
      res.blob().then((imgBlob) => {
        const $img = document.getElementById('img-0') as HTMLImageElement;
        $img.src = URL.createObjectURL(imgBlob);
        $img.nextElementSibling!.remove();
      });
    });
  }, 500);

  setTimeout(() => {
    fetch(`${assetsUrl}/statistiku.webp`).then((res) => {
      res.blob().then((imgBlob) => {
        const $img = document.getElementById('img-1') as HTMLImageElement;
        $img.src = URL.createObjectURL(imgBlob);
        $img.nextElementSibling!.remove();
      });
    });
  }, 1600);

  // ---

  const randBetween = (min: number, max: number) => {
    return Math.floor(Math.random() * (max - min + 1) + min);
  };

  const $tank = document.getElementById('insaniquarium-tank') as HTMLDivElement;
  const observer = new IntersectionObserver(([entry]) => {
    if (entry.isIntersecting) {
      observer.disconnect();
      addToTank({ type: 'guppyLg' });
      addToTank({ type: 'carnivore' });
      addToTank({ type: 'seymour', additionalMoveDelay: 2100 });
      addToTank({ type: 'guppyKing' });
      addToTank({ type: 'guppyMd' });
      addToTank({ type: 'guppySm', additionalMoveDelay: -600 });
    }
  });
  observer.observe($tank);

  const FISH_SPRITE_POSITION = {
    guppySm: -80 * 0,
    guppyMd: -80 * 1,
    guppyLg: -80 * 2,
    guppyKing: -80 * 3,
    carnivore: -80 * 4,
    seymour: -80 * 5,
  };
  const tankPopulation: Partial<Record<keyof typeof FISH_SPRITE_POSITION, number>> = {};

  const addToTank = (option: {
    type: keyof typeof FISH_SPRITE_POSITION;
    domOrder?: 'first' | 'last';
    position?: { x: number; y: number };
    facing?: 'l' | 'r';
    additionalMoveDelay?: number;
  }) => {
    tankPopulation[option.type] = (tankPopulation[option.type] || 0) + 1;

    const $fishContainer = document.createElement('div');
    const $fish = document.createElement('i');

    $fish.style.setProperty('--pos-y', `${FISH_SPRITE_POSITION[option.type]}px`);

    const divWidth = 80;
    const divHeight = 80;
    const maxTurnDistance = 80 * 2;

    const getRandomPosition = () => {
      const containerWidth = $tank.clientWidth;
      const containerHeight = $tank.clientHeight;
      const maxX = containerWidth - divWidth;
      const maxY = containerHeight - divHeight;
      const x = randBetween(-0.25 * divWidth, maxX + 0.25 * divWidth);
      const y = randBetween(-0.25 * divHeight, maxY + 0.25 * divHeight);
      return { x, y };
    };

    let position = option.position || getRandomPosition();
    let state = 'swim' as 'swim' | 'turn';
    let facing: 'l' | 'r' = option.facing || (Math.random() < 0.5 ? 'l' : 'r');

    const moveFish = () => {
      const nextPosition = getRandomPosition();
      const xDistance = Math.abs(nextPosition.x - position.x);

      const moveDuration = 1000 + randBetween(2500, 5000) + (option.additionalMoveDelay || 0);
      const delayDuration = randBetween(200, 500) + (option.additionalMoveDelay || 0) / 3;

      if (facing === 'l' && nextPosition.x > position.x) {
        // Turn right
        if (xDistance > maxTurnDistance) {
          nextPosition.x = position.x + maxTurnDistance;
        }
        position = nextPosition;
        state = 'turn';
        render(moveDuration, true);
        setTimeout(() => {
          facing = 'r';
          state = 'swim';
          render(undefined, false);
        }, 1200);
        setTimeout(moveFish, moveDuration + delayDuration);
        return;
      }
      if (facing === 'r' && nextPosition.x < position.x) {
        // Turn left
        if (xDistance > maxTurnDistance) {
          nextPosition.x = position.x - maxTurnDistance;
        }
        position = nextPosition;
        state = 'turn';
        render(moveDuration, true);
        setTimeout(() => {
          facing = 'l';
          state = 'swim';
          render(undefined, false);
        }, 1200);
        setTimeout(moveFish, moveDuration + delayDuration);
        return;
      }

      position = nextPosition;
      render(moveDuration, true);
      setTimeout(moveFish, moveDuration + delayDuration);
    };

    const render = (moveDuration?: number, updatePosition?: boolean) => {
      if (moveDuration) {
        $fishContainer.style.setProperty('--move-duration', `${moveDuration}ms`);
      }
      if (state === 'swim') {
        $fish.classList.add('fish-swim');
        $fish.classList.remove('fish-turn');
      } else {
        $fish.classList.add('fish-turn');
        $fish.classList.remove('fish-swim');
      }
      $fishContainer.classList.toggle('scale-x-[-1]', facing === 'r');
      if (updatePosition !== false) {
        $fishContainer.style.left = `${position.x}px`;
        $fishContainer.style.top = `${position.y}px`;
      }
    };

    render();
    const delay = randBetween(100, 2500);
    setTimeout(() => {
      moveFish();
    }, delay);

    $fishContainer.appendChild($fish);
    $fish.addEventListener('click', () => {
      $fish.classList.add('border');
      setTimeout(() => $fish.classList.remove('border'), 500);

      addToTank({
        type: option.type,
        domOrder: tankPopulation[option.type]! % 2 ? 'last' : 'first',
        facing,
        position: {
          x: $fishContainer.offsetLeft,
          y: $fishContainer.offsetTop,
        },
        additionalMoveDelay: option.additionalMoveDelay,
      });
    });

    if (option.domOrder === 'first') {
      $tank.prepend($fishContainer);
    } else {
      $tank.append($fishContainer);
    }
  };
</script>
